# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Publish to Maven central

on:
  workflow_dispatch:
  release:
    types: [ published, created, edited ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Apache Maven Central
        uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: 'temurin'
          #server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          server-id: central
          # settings-path: ${{ github.workspace }} # location for the settings.xml file
          # Nexus用户名环境变量
          server-username: MAVEN_USERNAME
#          server-username: ${{ secrets.NEXUS_USERNAME }}
          # Nexus密码环境变量
          server-password: MAVEN_CENTRAL_TOKEN
          # gpg短密码环境变量
          gpg-passphrase: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
          # gpg私钥
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          cache: 'maven'
      - name: Build And Publish to Maven central
        #run: mvn deploy -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -Ds -DstagingProgressTimeoutMinutes=20 -Pgithub --no-transfer-progress
        run: mvn -X deploy -DskipTests -PsonatypeDeploy
#        run: mvn deploy -Dgpg.skip -Dorg.apache.http.headers=DEBUG -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -Ds -DstagingProgressTimeoutMinutes=20 -Pgithub --no-transfer-progress
        env:
          MAVEN_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
#          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
#          MAVEN_CENTRAL_TOKEN: ${{ secrets.SONATYPE_PASSWORD }}
#    - name: Publish to GitHub Packages Apache Maven
#      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
#      env:
#        GITHUB_TOKEN: ${{ github.token }}
